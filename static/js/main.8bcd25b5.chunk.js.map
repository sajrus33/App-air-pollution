{"version":3,"sources":["components/SearchInput.js","components/NavBar.js","components/sort.js","components/AccordionElement.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["suggestions","label","map","suggestion","value","useStyles","makeStyles","theme","root","flexGrow","marginTop","backgroundColor","input","display","padding","height","valueContainer","flexWrap","flex","alignItems","overflow","noOptionsMessage","spacing","singleValue","fontSize","placeholder","position","left","bottom","paper","zIndex","right","inputComponent","_ref","inputRef","props","Object","objectWithoutProperties","react_default","a","createElement","assign","ref","components","Control","children","innerProps","innerRef","_props$selectProps","selectProps","classes","TextFieldProps","TextField","fullWidth","InputProps","inputProps","objectSpread","className","Menu","Paper","square","NoOptionsMessage","Typography","color","Option","MenuItem","selected","isFocused","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","SearchInput","useTheme","_React$useState","React","useState","_React$useState2","slicedToArray","single","setSingle","selectStyles","base","palette","text","primary","& input","font","NoSsr","react_select_browser_esm","styles","inputId","InputLabelProps","htmlFor","shrink","options","onChange","onChangeSearch","bar","paddingTop","marginBottom","h1","marginRight","barBtn","barIco","NavBar","AppBar","Toolbar","variant","IconButton","aria-label","onClick","window","scrollTo","top","behavior","ArrowUpward_default","sortData","results","citiesData","locations","lastCityName","city","forEach","result","index","measures","measurements","measure","parameter","push","cityLocations","length","cityParamsAvarge","cityI","parSum","location","locationI","pm25","pm25Amount","pm10","pm10Amount","co","coAmount","o3","o3Amount","bc","bcAmount","so2","so2Amount","no2","no2Amount","checkIfExist","arg","name","sort","position1","position2","i","splice","AccordionElement","Fade","in","showed","timeout","ExpansionPanel","panelExpansion","ExpansionPanelSummary","panelSummary","expandIcon","ExpandMore_default","aria-controls","id","heading","cityName","ExpansionPanelDetails","Box","flexDirection","cityDescribe","Table","TableHead","TableRow","TableCell","align","TableBody","key","typography","pxToRem","progress","Main","preloader","createdElements","cities","components_AccordionElement","concat","country","Fragment","paragraph","error","CircularProgress","App","state","countryInput","countryName","AccordionShowed","this","url","fetch","res","ok","localStorage","setItem","JSON","stringify","json","data","datas","setState","statusText","localData","parse","getItem","localDataCountry","e","inputValue","shortcutValue","getData","components_NavBar","bind","components_Main","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8bcd25b5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst suggestions = [\r\n  { label: 'France' },\r\n  { label: 'Germany' },\r\n  { label: 'Spain' },\r\n  { label: 'Poland' },\r\n\r\n].map(suggestion => ({\r\n  value: suggestion.label,\r\n  label: suggestion.label,\r\n}));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: 15,\r\n    backgroundColor: \"white\"\r\n  },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 18,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  }\r\n\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function SearchInput(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [single, setSingle] = React.useState(null);\r\n\r\n  function handleChangeSingle(value) {\r\n    setSingle(value);\r\n    props.onChangeSearch(value);\r\n  }\r\n\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          TextFieldProps={{\r\n            label: 'Country',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-single',\r\n              shrink: true,\r\n            },\r\n          }}\r\n          placeholder=\"Search a country\"\r\n          options={suggestions}\r\n          components={components}\r\n          value={single}\r\n          onChange={handleChangeSingle}\r\n\r\n\r\n        />\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport ToolBar from \"@material-ui/core/ToolBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\n\r\n/** custom Classes */\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    bar: {\r\n        backgroundColor: \"#4caf50\",\r\n        paddingTop: 15,\r\n        marginBottom: 15,\r\n        position: \"sticky\"\r\n    },\r\n    h1: {\r\n        fontSize: \"2.5em\",\r\n        fontWeight: 600,\r\n        color: \"#000\",\r\n        marginRight: \"auto\"\r\n    },\r\n    barBtn: {\r\n        fontSize: \"26\"\r\n    },\r\n    barIco: {\r\n        color: \"#4caf50\",\r\n        fontSize: 32\r\n    }\r\n}));\r\n\r\n/** Navigation Bar */\r\n\r\nconst NavBar = props => {\r\n    const classes = useStyles();\r\n\r\n    /** Click handler for NavBar > Button */\r\n\r\n    const handleNavBtn = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n\r\n    return (\r\n\r\n        <AppBar className={classes.bar} >\r\n            <ToolBar>\r\n                <Typography variant=\"h1\" className={classes.h1}>\r\n                    High air pollution !\r\n                </Typography>\r\n                <IconButton aria-label=\"Scroll up\" onClick={handleNavBtn} className={classes.barBtn} style={{ backgroundColor: \"black\" }}>\r\n                    <ArrowUpward className={classes.barIco} />\r\n                </IconButton>\r\n            </ToolBar>\r\n            <SearchInput onChangeSearch={props.onChangeSearch} />\r\n\r\n        </AppBar>\r\n\r\n    )\r\n}\r\nexport default NavBar;\r\n","const sortData = (results) => {\r\n    // sort datas\r\n    const citiesData = [];\r\n    let locations = [];\r\n    let lastCityName = results[0].city;\r\n\r\n    // sort each result\r\n    results.forEach((result, index) => {\r\n\r\n        // get result measurements  into array \"measures\"\r\n        const measures = [];\r\n\r\n        result.measurements.forEach(measure => {\r\n            const parameter = {};\r\n            parameter[measure.parameter] = measure.value;\r\n            measures.push(parameter);\r\n        })\r\n\r\n        // check if its still the same city, than push it into array \"locations\" \r\n        if (result.city === lastCityName) {\r\n            locations.push(measures);\r\n\r\n\r\n            // else if its another city, than clear array and \r\n        } else {\r\n            // make it obj for readable keys\r\n            const cityLocations = {};\r\n            cityLocations[\"name\"] = lastCityName;\r\n            cityLocations[\"locations\"] = locations;\r\n\r\n            //push locations of last city into array \"citiesData\"\r\n            citiesData.push(cityLocations);\r\n\r\n            // push new into empty \"locations\" \r\n            locations = [];\r\n            locations.push(measures)\r\n\r\n            // change last city name\r\n            lastCityName = result.city;\r\n        }\r\n\r\n        // if its the last one push it into array \"citiesData\"\r\n        if (index === results.length - 1) {\r\n\r\n            // make it obj for readable keys\r\n            const cityLocations = {};\r\n            cityLocations[\"name\"] = result.city;\r\n            cityLocations[\"locations\"] = locations;\r\n\r\n            citiesData.push(cityLocations);\r\n        }\r\n    });\r\n\r\n    // Count the avarge of each measurement parameter\r\n    let cityParamsAvarge = [];\r\n    citiesData.forEach((city, cityI) => {\r\n        let parSum;\r\n\r\n        city.locations.forEach((location, locationI) => {\r\n            parSum = {\r\n                pm25: 0, pm25Amount: 0,\r\n                pm10: 0, pm10Amount: 0,\r\n                co: 0, coAmount: 0,\r\n                o3: 0, o3Amount: 0,\r\n                bc: 0, bcAmount: 0,\r\n                so2: 0, so2Amount: 0,\r\n                no2: 0, no2Amount: 0,\r\n            };\r\n\r\n            // Sum together all types od air pollution parameters\r\n\r\n            if (location[locationI] && location[locationI].pm25) {\r\n                parSum.pm25 += location[locationI].pm25;\r\n                parSum.pm25Amount += 1;\r\n            }\r\n            if (location[locationI] && location[locationI].pm10) {\r\n                parSum.pm10 += location[locationI].pm10;\r\n                parSum.pm10Amount += 1;\r\n            }\r\n            if (location[locationI] && location[locationI].co) {\r\n                parSum.co += location[locationI].co;\r\n                parSum.coAmount += 1;\r\n            }\r\n            if (location[locationI] && location[locationI].o3) {\r\n                parSum.o3 += location[locationI].o3;\r\n                parSum.o3Amount += 1;\r\n            }\r\n            if (location[locationI] && location[locationI].bc) {\r\n                parSum.bc += location[locationI].bc;\r\n                parSum.bcAmount += 1;\r\n            }\r\n            if (location[locationI] && location[locationI].so2) {\r\n                parSum.so2 += location[locationI].so2;\r\n                parSum.so2Amount += 1;\r\n            }\r\n            if (location[locationI] && location[locationI].no2) {\r\n                parSum.no2 += location[locationI].no2;\r\n                parSum.no2Amount += 1;\r\n            }\r\n\r\n        });\r\n\r\n        // checking function \r\n        const checkIfExist = arg => {\r\n            if (!arg) {\r\n                return arg = 1;\r\n            } else\r\n                return arg\r\n        };\r\n\r\n        // check all params\r\n        parSum.pm25Amount = checkIfExist(parSum.pm25Amount);\r\n        parSum.pm10Amount = checkIfExist(parSum.pm10Amount);\r\n        parSum.coAmount = checkIfExist(parSum.coAmount);\r\n        parSum.o3Amount = checkIfExist(parSum.o3Amount);\r\n        parSum.bcAmount = checkIfExist(parSum.bcAmount);\r\n        parSum.so2Amount = checkIfExist(parSum.so2Amount);\r\n        parSum.no2Amount = checkIfExist(parSum.no2Amount);\r\n\r\n        //set brand new array with counted params\r\n        cityParamsAvarge[cityI] = [\r\n            parSum.pm25 / parSum.pm25Amount,\r\n            parSum.pm10 / parSum.pm10Amount,\r\n            parSum.co / parSum.coAmount,\r\n            parSum.o3 / parSum.o3Amount,\r\n            parSum.bc / parSum.bcAmount,\r\n            parSum.so2 / parSum.so2Amount,\r\n            parSum.no2 / parSum.no2Amount,\r\n            city.name\r\n        ];\r\n    });\r\n    // sort all cities based on their parameters !\r\n    // eslint-disable-next-line \r\n    cityParamsAvarge.sort((position1, position2) => {\r\n        for (let i = 0; i < 7; i++) {\r\n            if (position1[i] > position2[i]) return -1;\r\n            if (position1[i] < position2[i]) return 1;\r\n        }\r\n    });\r\n\r\n    // cutout top 10 cities\r\n\r\n    cityParamsAvarge.splice(10);\r\n    return cityParamsAvarge;\r\n}\r\n\r\nexport default sortData;","import React from 'react';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n/** Single Accordion Element */\r\n\r\nconst AccordionElement = props => {\r\n    return (\r\n        <Fade in={props.showed} timeout={400}>\r\n            <ExpansionPanel className={props.classes.panelExpansion} >\r\n                <ExpansionPanelSummary className={props.classes.panelSummary}\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls={\"panel\" + props.index + \"a-content\"}\r\n                    id={\"panel\" + props.index + \"a-header\"}\r\n                >\r\n                    <Typography variant=\"h2\" className={props.classes.heading}> {props.cityName}</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails >\r\n                    <Box display=\"flex\" flexDirection=\"column\">\r\n                        <Typography style={{ marginBottom: \"15px\" }}>\r\n                            {props.cityDescribe}\r\n                        </Typography>\r\n                        <Table >\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\">PM25</TableCell>\r\n                                    <TableCell align=\"left\">PM10</TableCell>\r\n                                    <TableCell align=\"left\">CO</TableCell>\r\n                                    <TableCell align=\"left\">O3</TableCell>\r\n                                    <TableCell align=\"left\">BC</TableCell>\r\n                                    <TableCell align=\"left\">SO2</TableCell>\r\n                                    <TableCell align=\"left\">NO2</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow key={\"row\"}>\r\n                                    <TableCell align=\"left\">{props.pm25} </TableCell>\r\n                                    <TableCell align=\"left\">{props.pm10} </TableCell>\r\n                                    <TableCell align=\"left\">{props.co} </TableCell>\r\n                                    <TableCell align=\"left\">{props.o3} </TableCell>\r\n                                    <TableCell align=\"left\">{props.bc} </TableCell>\r\n                                    <TableCell align=\"left\">{props.so2} </TableCell>\r\n                                    <TableCell align=\"left\">{props.no2} </TableCell>\r\n\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Box>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </Fade>\r\n    )\r\n}\r\nexport default AccordionElement;\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccordionElement from '../components/AccordionElement';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**custom Classes*/\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    panelSummary: {\r\n        fontWeight: 700,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(17),\r\n        fontWeight: 600,\r\n    },\r\n    progress: {\r\n        position: \"fixed\",\r\n        left: \"calc(50% - 20px)\",\r\n        top: \"calc(50% + 80px)\",\r\n        color: \"#4caf50\"\r\n    }\r\n}));\r\n\r\n/** Main > SearchInput + Accordion */\r\n\r\nconst Main = props => {\r\n    const classes = useStyles();\r\n    const createdElements = [];\r\n\r\n    let preloader;\r\n    preloader = props.showed ? \"none\" : \"block\";\r\n\r\n    /** Create Accordion based on SearchInput value */\r\n    const loadAccordion = () => {\r\n        props.cities.forEach((city, i) => {\r\n            const pm25 = props.cities[i][0];\r\n            const pm10 = props.cities[i][1];\r\n            const co = props.cities[i][2];\r\n            const o3 = props.cities[i][3];\r\n            const bc = props.cities[i][4];\r\n            const so2 = props.cities[i][5];\r\n            const no2 = props.cities[i][6];\r\n            const cityName = props.cities[i][7];\r\n\r\n\r\n            createdElements.push(\r\n                <AccordionElement\r\n                    classes={classes}\r\n                    showed={props.showed}\r\n                    key={i}\r\n                    index={i}\r\n                    cityName={cityName}\r\n                    cityDescribe={`Country: ${props.country}. \r\n                        Latest air pollution measurement.\r\n                     `}\r\n                     pm25={pm25}\r\n                     pm10={pm10}\r\n                     co={co}\r\n                     o3={o3}\r\n                     bc={bc}\r\n                     so2={so2}\r\n                     no2={no2}\r\n                    />\r\n            )\r\n        })\r\n    }\r\n    loadAccordion();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h4\" align=\"center\" paragraph={true}>{props.country ? props.country : props.error}</Typography>\r\n            <div>\r\n                <CircularProgress style={{ display: preloader }} className={classes.progress} />\r\n                {createdElements}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Main;\r\n\r\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport sort from './components/sort';\n\n\nimport Main from './components/Main';\n\nimport './App.css';\n\n\nclass App extends Component {\n\n  state = {\n    cities: [],\n    countryInput: null,\n    countryName: null,\n    error: null,\n    AccordionShowed: true\n  }\n\n  /** Fetch data and validate it */\n\n  async getData() {\n\n    /** Sort data */\n    // imported from components/sort.js\n    const sortData = sort;\n\n\n    // fetch data\n    const country = this.state.countryInput;\n\n    const url = `https://api.openaq.org/v1/latest?country=${country}&order_by=city&limit=10000`;\n    const res = await fetch(url);\n    let data;\n\n    if (res.ok) {\n      localStorage.setItem(\"localDataCountry\", JSON.stringify(this.state.countryInput));\n      data = await res.json();\n\n      if (data.results) {\n\n        const datas = await sortData(data.results);\n        this.setState({ cities: datas, error: null });\n\n        // storage actual data\n        localStorage.setItem(\"localData\", JSON.stringify(datas));\n\n      }\n      // custom Throw Error\n    } else {\n      this.setState({ error: res.statusText });\n    }\n  }\n\n  /** LocalStorage getting */\n\n  async componentDidMount() {\n\n    const localData = JSON.parse(localStorage.getItem(\"localData\"));\n    const localDataCountry = JSON.parse(localStorage.getItem(\"localDataCountry\"));\n\n    if (localData) {\n      let countryName = localDataCountry;\n\n      switch (countryName) {\n        case \"FR\": countryName = \"France\"\n          break;\n        case \"DE\": countryName = \"Germany\"\n          break;\n        case \"PL\": countryName = \"Poland\"\n          break;\n        case \"SP\": countryName = \"Spain\"\n          break;\n        default: //nothing to do here\n          break;\n      }\n\n      this.setState({\n        countryName: countryName,\n        cities: localData,\n\n      })\n    }\n  }\n\n\n  /** Input change handler for SearchInput */\n\n  async onChangeSearch(e) {\n    const inputValue = e.value;\n    let shortcutValue = this.state.countryInput;\n\n    switch (inputValue) {\n      case \"France\": shortcutValue = \"FR\"\n        break;\n      case \"Germany\": shortcutValue = \"DE\"\n        break;\n      case \"Poland\": shortcutValue = \"PL\"\n        break;\n      case \"Spain\": shortcutValue = \"ES\"\n        break;\n      default: //nothing to do here\n        break;\n    }\n\n    // if there is different input than last one\n    if (shortcutValue !== this.state.countryInput) {\n\n      await this.setState({\n        countryInput: shortcutValue,\n        AccordionShowed: false,\n        countryName: inputValue\n      });\n      // fetch new data\n      await this.getData();\n      // Run Accordion Elements Animation <Fade>\n      this.setState({ AccordionShowed: true });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment >\n        <NavBar onChangeSearch={this.onChangeSearch.bind(this)} />\n        <Main\n          country={this.state.countryName}\n          cities={this.state.cities}\n          showed={this.state.AccordionShowed}\n          error={this.state.error} />\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
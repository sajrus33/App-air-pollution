{"version":3,"sources":["components/SearchInput.js","components/NavBar.js","components/AccordionElement.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["suggestions","label","map","suggestion","value","useStyles","makeStyles","theme","root","flexGrow","marginTop","backgroundColor","input","display","padding","height","valueContainer","flexWrap","flex","alignItems","overflow","noOptionsMessage","spacing","singleValue","fontSize","placeholder","position","left","bottom","paper","zIndex","right","inputComponent","_ref","inputRef","props","Object","objectWithoutProperties","react_default","a","createElement","assign","ref","components","Control","children","innerProps","innerRef","_props$selectProps","selectProps","classes","TextFieldProps","TextField","fullWidth","InputProps","inputProps","objectSpread","className","Menu","Paper","square","NoOptionsMessage","Typography","color","Option","MenuItem","selected","isFocused","component","style","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","SearchInput","useTheme","_React$useState","React","useState","_React$useState2","slicedToArray","single","setSingle","selectStyles","base","palette","text","primary","& input","font","NoSsr","react_select_browser_esm","styles","inputId","InputLabelProps","htmlFor","shrink","options","onChange","onChangeSearch","bar","paddingTop","marginBottom","h1","marginRight","barBtn","barIco","NavBar","AppBar","Toolbar","variant","IconButton","aria-label","onClick","window","scrollTo","top","behavior","ArrowUpward_default","AccordionElement","Fade","in","showed","timeout","ExpansionPanel","panelExpansion","ExpansionPanelSummary","panelSummary","expandIcon","ExpandMore_default","aria-controls","index","id","heading","cityName","ExpansionPanelDetails","cityDescribe","typography","pxToRem","progress","Main","preloader","createdElements","cities","forEach","city","i","push","components_AccordionElement","key","concat","country","locations","count","Fragment","align","paragraph","error","CircularProgress","App","state","countryInput","countryName","AccordionShowed","this","url","fetch","res","ok","datas","json","data","results","result","setState","localStorage","setItem","JSON","stringify","statusText","localData","parse","getItem","e","inputValue","shortcutValue","getData","components_NavBar","bind","components_Main","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd9ec978.chunk.js","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst suggestions = [\r\n  { label: 'France' },\r\n  { label: 'Germany' },\r\n  { label: 'Spain' },\r\n  { label: 'Poland' },\r\n\r\n].map(suggestion => ({\r\n  value: suggestion.label,\r\n  label: suggestion.label,\r\n}));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: 15,\r\n    backgroundColor: \"white\"\r\n  },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 18,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  }\r\n\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function SearchInput(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [single, setSingle] = React.useState(null);\r\n\r\n  function handleChangeSingle(value) {\r\n    setSingle(value);\r\n    props.onChangeSearch(value);\r\n  }\r\n\r\n\r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n        <Select\r\n          classes={classes}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-single\"\r\n          TextFieldProps={{\r\n            label: 'Country',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-single',\r\n              shrink: true,\r\n            },\r\n          }}\r\n          placeholder=\"Search a country\"\r\n          options={suggestions}\r\n          components={components}\r\n          value={single}\r\n          onChange={handleChangeSingle}\r\n\r\n\r\n        />\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport ToolBar from \"@material-ui/core/ToolBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchInput from '../components/SearchInput';\r\n\r\n\r\n/** custom Classes */\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    bar: {\r\n        backgroundColor: \"#4caf50\",\r\n        paddingTop: 15,\r\n        marginBottom: 15,\r\n        position: \"sticky\"\r\n    },\r\n    h1: {\r\n        fontSize: \"2.5em\",\r\n        fontWeight: 600,\r\n        color: \"#000\",\r\n        marginRight: \"auto\"\r\n    },\r\n    barBtn: {\r\n        fontSize: \"26\"\r\n    },\r\n    barIco: {\r\n        color: \"#4caf50\",\r\n        fontSize: 32\r\n    }\r\n}));\r\n\r\n/** Navigation Bar */\r\n\r\nconst NavBar = props => {\r\n    const classes = useStyles();\r\n\r\n    /** Click handler for NavBar > Button */\r\n\r\n    const handleNavBtn = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n\r\n    return (\r\n\r\n        <AppBar className={classes.bar} >\r\n            <ToolBar>\r\n                <Typography variant=\"h1\" className={classes.h1}>\r\n                    High air pollution !\r\n                </Typography>\r\n                <IconButton aria-label=\"Scroll up\" onClick={handleNavBtn} className={classes.barBtn} style={{ backgroundColor: \"black\" }}>\r\n                    <ArrowUpward className={classes.barIco} />\r\n                </IconButton>\r\n            </ToolBar>\r\n            <SearchInput onChangeSearch={props.onChangeSearch} />\r\n\r\n        </AppBar>\r\n\r\n    )\r\n}\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n/** Single Accordion Element */\r\n\r\nconst AccordionElement = props => {\r\n    return (\r\n        <Fade in={props.showed} timeout={400}>\r\n            <ExpansionPanel className={props.classes.panelExpansion} >\r\n                <ExpansionPanelSummary className={props.classes.panelSummary}\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls={\"panel\" + props.index + \"a-content\"}\r\n                    id={\"panel\" + props.index + \"a-header\"}\r\n                >\r\n                    <Typography variant=\"h2\" className={props.classes.heading}> {props.cityName}</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails >\r\n                    <Typography >\r\n                        {props.cityDescribe}\r\n                    </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </Fade>\r\n    )\r\n}\r\nexport default AccordionElement;\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccordionElement from '../components/AccordionElement';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**custom Classes*/\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    panelSummary: {\r\n        fontWeight: 700,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(17),\r\n        fontWeight: 600,\r\n    },\r\n    progress: {\r\n        position: \"absolute\",\r\n        left: \"calc(50% - 20px)\",\r\n        top: \"calc(50% - 20px)\",\r\n        color: \"#4caf50\"\r\n    }\r\n}));\r\n\r\n/** Main > SearchInput + Accordion */\r\n\r\nconst Main = props => {\r\n    const classes = useStyles();\r\n    const createdElements = [];\r\n\r\n    let preloader;\r\n    preloader = props.showed ? \"none\" : \"block\";\r\n\r\n    /** Create Accordion based on SearchInput value */\r\n\r\n    const loadAccordion = () => {\r\n        props.cities.forEach((city, i) => {\r\n            createdElements.push(\r\n                <AccordionElement\r\n                    classes={classes}\r\n                    showed={props.showed}\r\n                    key={i}\r\n                    index={i}\r\n                    cityName={city.city}\r\n                    cityDescribe={`Country: ${props.country}. \r\n                        We found ${city.locations} locations in this city! \r\n                        Pollution is eqaul to: ${city.count} `} />\r\n            )\r\n        })\r\n    }\r\n    loadAccordion();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h4\" align=\"center\" paragraph={true}>{props.cities[0] ? props.country : props.error}</Typography>\r\n            <div>\r\n                <CircularProgress style={{ display: preloader }} className={classes.progress} />\r\n                {createdElements}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Main;\r\n\r\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\n\nimport Main from './components/Main';\n\nimport './App.css';\n\n\nclass App extends Component {\n\n  state = {\n    cities: [],\n    countryInput: null,\n    countryName: null,\n    error: null,\n    AccordionShowed: true\n  }\n\n  /** Fetch data and validate it */\n\n  async getData() {\n    const country = this.state.countryInput;\n    const url = `https://api.openaq.org/v1/cities?country=${country}&limit=10&order_by=count&sort=desc`;\n    const res = await fetch(url);\n\n    if (res.ok) {\n      const datas = [];\n      const data = await res.json();\n      data.results.forEach(result => {\n        datas.push(result);\n      });\n      if (data.results) {\n        this.setState({ cities: datas, error: null });\n\n        // storage actual data\n        localStorage.setItem(\"localData\", JSON.stringify(data.results));\n      }\n      // custom Throw Error\n    } else {\n      this.setState({ error: res.statusText });\n    }\n  }\n\n  /** Input change handler for SearchInput */\n\n  async componentDidMount() {\n    const localData = JSON.parse(localStorage.getItem(\"localData\"));\n    if (localData) {\n      let countryName = localData[0].country;\n      let datas = [];\n\n      switch (countryName) {\n        case \"FR\": countryName = \"France\"\n          break;\n        case \"DE\": countryName = \"Germany\"\n          break;\n        case \"PL\": countryName = \"Poland\"\n          break;\n        case \"SP\": countryName = \"Spain\"\n          break;\n        default: //nothing to do here\n          break;\n      }\n      localData.forEach(result => {\n        datas.push(result);\n      });\n\n      this.setState({\n        countryName: countryName,\n        cities: datas,\n\n      })\n    }\n  }\n\n\n  /** Input change handler for SearchInput */\n\n  async onChangeSearch(e) {\n    const inputValue = e.value;\n    let shortcutValue = this.state.countryInput;\n\n    switch (inputValue) {\n      case \"France\": shortcutValue = \"FR\"\n        break;\n      case \"Germany\": shortcutValue = \"DE\"\n        break;\n      case \"Poland\": shortcutValue = \"PL\"\n        break;\n      case \"Spain\": shortcutValue = \"ES\"\n        break;\n      default: //nothing to do here\n        break;\n    }\n\n    // if there is different input than last one\n    if (shortcutValue !== this.state.countryInput) {\n\n      await this.setState({\n        countryInput: shortcutValue,\n        AccordionShowed: false,\n        countryName: inputValue\n      });\n      // fetch new data\n      await this.getData();\n      // Run Accordion Elements Animation <Fade>\n      this.setState({ AccordionShowed: true });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment >\n        <NavBar onChangeSearch={this.onChangeSearch.bind(this)} />\n        <Main\n          country={this.state.countryName}\n          cities={this.state.cities}\n          showed={this.state.AccordionShowed}\n          error={this.state.error} />\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}